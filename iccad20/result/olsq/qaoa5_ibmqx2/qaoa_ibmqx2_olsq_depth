Input gate count = 22
depth = 14
gate count = OrderedDict([('cx', 8), ('h', 5), ('rx', 5), ('rz', 4)])
Trying maximal depth = 14...
Compilation time = 10.410145282745361s.
result circuit depth = 14.
gate 0 is at cycle 0 on node 4
gate 1 is at cycle 0 on node 3
gate 2 is at cycle 0 on node 2
gate 3 is at cycle 0 on node 0
gate 4 is at cycle 0 on node 1
gate 5 is at cycle 1 on edge (3,4)
gate 6 is at cycle 2 on node 3
gate 7 is at cycle 3 on edge (3,4)
gate 8 is at cycle 4 on edge (2,3)
gate 9 is at cycle 5 on node 2
gate 10 is at cycle 6 on edge (2,3)
gate 11 is at cycle 7 on edge (0,2)
gate 12 is at cycle 8 on node 0
gate 13 is at cycle 9 on edge (0,2)
gate 14 is at cycle 10 on edge (0,1)
gate 15 is at cycle 11 on node 1
gate 16 is at cycle 12 on edge (0,1)
gate 17 is at cycle 4 on node 4
gate 18 is at cycle 7 on node 3
gate 19 is at cycle 13 on node 4
gate 20 is at cycle 13 on node 0
gate 21 is at cycle 13 on node 1
logical qubit 0 is mapped to node 4 in the beginning, node 2 at the end
logical qubit 1 is mapped to node 3 in the beginning, node 3 at the end
logical qubit 2 is mapped to node 2 in the beginning, node 4 at the end
logical qubit 3 is mapped to node 0 in the beginning, node 0 at the end
logical qubit 4 is mapped to node 1 in the beginning, node 1 at the end
A swap gate finished at cycle 12 on edge (2, 4).
     ┌──────────┐                                                       »
q_0: ┤ U2(0,pi) ├───────────────────────────────────────────────────────»
     ├──────────┤                                                       »
q_1: ┤ U2(0,pi) ├───────────────────────────────────────────────────────»
     ├──────────┤                           ┌───┐     ┌───────────┐┌───┐»
q_2: ┤ U2(0,pi) ├───────────────────────────┤ X ├─────┤ U1(1.571) ├┤ X ├»
     ├──────────┤┌───┐┌───────────┐┌───┐    └─┬─┘     └───────────┘└─┬─┘»
q_3: ┤ U2(0,pi) ├┤ X ├┤ U1(1.571) ├┤ X ├──────■──────────────────────■──»
     ├──────────┤└─┬─┘└───────────┘└─┬─┘┌────────────┐                  »
q_4: ┤ U2(0,pi) ├──■─────────────────■──┤ R(2.356,0) ├──────────────────»
     └──────────┘                       └────────────┘                  »
c_0: ═══════════════════════════════════════════════════════════════════»
                                                                        »
c_1: ═══════════════════════════════════════════════════════════════════»
                                                                        »
c_2: ═══════════════════════════════════════════════════════════════════»
                                                                        »
c_3: ═══════════════════════════════════════════════════════════════════»
                                                                        »
c_4: ═══════════════════════════════════════════════════════════════════»
                                                                        »
«         ┌───┐     ┌───────────┐┌───┐                       ┌────────────┐   »
«q_0: ────┤ X ├─────┤ U1(1.571) ├┤ X ├──■─────────────────■──┤ R(2.356,0) ├───»
«         └─┬─┘     └───────────┘└─┬─┘┌─┴─┐┌───────────┐┌─┴─┐├────────────┤   »
«q_1: ──────┼──────────────────────┼──┤ X ├┤ U1(1.571) ├┤ X ├┤ R(2.356,0) ├───»
«           │                      │  └───┘└───┬───┬───┘└───┘└────────────┘┌─┐»
«q_2: ──────■──────────────────────■────■──────┤ X ├──────■────────────────┤M├»
«     ┌────────────┐     ┌─┐            │      └─┬─┘      │                └╥┘»
«q_3: ┤ R(2.356,0) ├─────┤M├────────────┼────────┼────────┼─────────────────╫─»
«     └────────────┘     └╥┘          ┌─┴─┐      │      ┌─┴─┐┌────────────┐ ║ »
«q_4: ────────────────────╫───────────┤ X ├──────■──────┤ X ├┤ R(2.356,0) ├─╫─»
«                         ║           └───┘             └───┘└────────────┘ ║ »
«c_0: ════════════════════╬═════════════════════════════════════════════════╩═»
«                         ║                                                   »
«c_1: ════════════════════╩═══════════════════════════════════════════════════»
«                                                                             »
«c_2: ════════════════════════════════════════════════════════════════════════»
«                                                                             »
«c_3: ════════════════════════════════════════════════════════════════════════»
«                                                                             »
«c_4: ════════════════════════════════════════════════════════════════════════»
«                                                                             »
«        ┌─┐   
«q_0: ───┤M├───
«        └╥┘┌─┐
«q_1: ────╫─┤M├
«         ║ └╥┘
«q_2: ────╫──╫─
«         ║  ║ 
«q_3: ────╫──╫─
«     ┌─┐ ║  ║ 
«q_4: ┤M├─╫──╫─
«     └╥┘ ║  ║ 
«c_0: ═╬══╬══╬═
«      ║  ║  ║ 
«c_1: ═╬══╬══╬═
«      ║  ║  ║ 
«c_2: ═╩══╬══╬═
«         ║  ║ 
«c_3: ════╩══╬═
«            ║ 
«c_4: ═══════╩═
«              
depth = 15
gate count = OrderedDict([('cx', 11), ('u2', 5), ('r', 5), ('measure', 5), ('u1', 4)])
